<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

  <context:property-placeholder location="classpath:config.properties"/>

  <context:component-scan base-package="com.bob.*.*.service">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
  </context:component-scan>

  <!--初始化常量配置-->
  <bean class="com.bob.core.contants.BizConfig">
    <property name="algorithmName" value="${shiro.algorithmName}"/>
    <property name="hashIterations" value="${shiro.hashIterations}"/>
  </bean>

  <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    <property name="enableTransactionSupport" value="true"/>
    <property name="connectionFactory" ref="jedisConnectionFactory"/>
    <property name="keySerializer">
      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    </property>
    <property name="hashKeySerializer">
      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    </property>
    <property name="valueSerializer">
      <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
    </property>
    <property name="hashValueSerializer">
      <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
    </property>
  </bean>

  <bean id="jdkRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    <property name="enableTransactionSupport" value="true"/>
    <property name="connectionFactory" ref="jedisConnectionFactory"/>
    <property name="keySerializer">
      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    </property>
    <property name="hashKeySerializer">
      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    </property>
    <property name="valueSerializer">
      <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
    </property>
    <property name="hashValueSerializer">
      <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
    </property>
  </bean>

  <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    <property name="poolConfig" ref="poolConfig"/>
    <property name="hostName" value="${redis.host}"/>
    <property name="port" value="${redis.port}"/>
    <property name="password" value="${redis.pass}"/>
    <property name="timeout" value="3000"/>
  </bean>

  <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <property name="maxIdle" value="50"/> <!-- 最大空闲连接数, 默认8个 -->
    <property name="maxTotal" value="200"/> <!-- 最大连接数, 默认8个；redis服务默认最大值是10000 -->
    <property name="maxWaitMillis" value="3000"/> <!-- 获取连接时的最大等待毫秒数 -->
    <property name="testOnCreate" value="true"/>
  </bean>

  <!--<bean id="redisCluster" class="org.springframework.data.redis.connection.RedisClusterConfiguration">-->
    <!--<property name="clusterNodes">-->
      <!--<set>-->
        <!--<ref bean="clusterNodes01"/>-->
        <!--<ref bean="clusterNodes02"/>-->
        <!--<ref bean="clusterNodes03"/>-->
        <!--<ref bean="clusterNodes04"/>-->
        <!--<ref bean="clusterNodes05"/>-->
        <!--<ref bean="clusterNodes06"/>-->
      <!--</set>-->
    <!--</property>-->
  <!--</bean>-->

  <!--<bean id="clusterNodes01" class="org.springframework.data.redis.connection.RedisNode">-->
    <!--<constructor-arg value="${redis.cluster01.host}"/>-->
    <!--<constructor-arg value="${redis.cluster01.port}" type="int"/>-->
  <!--</bean>-->

  <!--<bean id="clusterNodes02" class="org.springframework.data.redis.connection.RedisNode">-->
    <!--<constructor-arg value="${redis.cluster02.host}"/>-->
    <!--<constructor-arg value="${redis.cluster02.port}" type="int"/>-->
  <!--</bean>-->

  <!--<bean id="clusterNodes03" class="org.springframework.data.redis.connection.RedisNode">-->
    <!--<constructor-arg value="${redis.cluster03.host}"/>-->
    <!--<constructor-arg value="${redis.cluster03.port}" type="int"/>-->
  <!--</bean>-->

  <!--<bean id="clusterNodes04" class="org.springframework.data.redis.connection.RedisNode">-->
    <!--<constructor-arg value="${redis.cluster04.host}"/>-->
    <!--<constructor-arg value="${redis.cluster04.port}" type="int"/>-->
  <!--</bean>-->

  <!--<bean id="clusterNodes05" class="org.springframework.data.redis.connection.RedisNode">-->
    <!--<constructor-arg value="${redis.cluster05.host}"/>-->
    <!--<constructor-arg value="${redis.cluster05.port}" type="int"/>-->
  <!--</bean>-->

  <!--<bean id="clusterNodes06" class="org.springframework.data.redis.connection.RedisNode">-->
    <!--<constructor-arg value="${redis.cluster06.host}"/>-->
    <!--<constructor-arg value="${redis.cluster06.port}" type="int"/>-->
  <!--</bean>-->

</beans>
